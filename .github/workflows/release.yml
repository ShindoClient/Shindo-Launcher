name: Build & Release Shindo Launcher

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: universal-apple-darwin

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install
          npm install @tauri-apps/cli@latest --save-dev
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            npm install @tauri-apps/cli-darwin-universal --save-dev || true
          elif [[ "$RUNNER_OS" == "Linux" ]]; then
            npm install @tauri-apps/cli-linux-x64-gnu --save-dev || true
          elif [[ "$RUNNER_OS" == "Windows" ]]; then
            npm install @tauri-apps/cli-win32-x64-msvc --save-dev || true
          fi

      - name: Build Tauri App (Signed)
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        run: npx tauri build

      - name: Generate latest.json
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          OUTPUT_DIR="src-tauri/target/release/bundle"
          SIG_FILE=$(find "$OUTPUT_DIR" -name "*.sig" | head -n 1)
          APP_FILE=$(find "$OUTPUT_DIR" -name "*.AppImage" -o -name "*.exe" -o -name "*.dmg" | head -n 1)
          SHA512=$(shasum -a 512 "$APP_FILE" | awk '{print $1}')
          cat > latest.json <<EOF
          {
            "version": "$VERSION",
            "notes": "Auto-generated release for $VERSION",
            "pub_date": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
            "platforms": {
              "${{ matrix.target }}": {
                "signature": "$(cat $SIG_FILE)",
                "url": "https://github.com/${{ github.repository }}/releases/download/$VERSION/$(basename $APP_FILE)",
                "sha512": "$SHA512"
              }
            }
          }
          EOF

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-artifacts
          path: |
            src-tauri/target/release/bundle/**
            latest.json

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded files
        run: ls -R artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}